/*========================================*/
/* css reset */
/*========================================*/
body,h1,h2,h3,h4,h5,h6,hr,p,blockquote,dl,dt,dd,ul,ol,li,pre,
form,fieldset,legend,button,input,textarea,th,td  {margin:0;padding:0;}
body,button,input,select,textarea{font:12px/1.5     tahoma,arial,\5b8b\4f53;}
ul,ol{list-style:none;}
a{text-decoration:none;}
a:hover{text-decoration:underline;}
fieldset,img{border:0;}
table{border-collapse:collapse;border-spacing:0;}
button{outline:none;}
//input{outline:none;border:0}
/*========================================*/
/* 颜色集*/
/*========================================*/
$blue:#0093e4;
$jdRed:#e4393c;//京东红
$green: #17f060;
$dark: #000000;
$default: #ffffff;
$success:#19be6b;
$primary: #2d8cf0;
$lightPrimary:#5cadff;
$darkPrimary:#2b85e4;
$warning : #ff9900;
$danger: #ed3f14;
$info:#2d8cf0;
$title:#1c2438;//标题
$content:#495060;//正文
$subColor:#80848f;//辅助
$disabled:#bbbec4;//失效，禁用
$border:#dddee1;//边框
$divider:#e9eaec;//分割线
$Background:#f8f8f9;
//背景颜色，默认为白色
@mixin bgc($color:$default){
  background-color: $color;
}
// 字体颜色，默认为黑色
@mixin fc($color:$dark){
  color: $color;
}
@mixin fstyle(){
  font-family: "Helvetica Neue",Helvetica,"PingFang SC","Hiragino Sans GB","Microsoft YaHei","微软雅黑",Arial,sans-serif;
}
//怪异盒子模型，带边框，默认黑色，1px，实线，改宽度的优先级最高，颜色次之
@mixin ieBox($width:1px,$color:$border,$type:solid){
  box-sizing: border-box;
  border:$width $type $color;
}
/* 清除浮动及上边距溢出 */
.clear{
  &:before,
  &:after{
    content: "";
    display:table;
  }
  &:after{
    clear: both;
    overflow: hidden;
  }
}


/*========================================*/
/* 12栅格系统*/
/*========================================*/
/* 基础样式*/
.col{
  float: left;
  position: relative;
  @include fc($default);
  font-size:2em;
  width: 100%;
}
/* 从大到小，越小优先级越高 */
$colWidth:(100%/12);
$screen-xs-max:576px;
$screen-sm-max:768px;
$screen-md-max:992px;
$screen-lg-max:1200px;
/* auto: 超大屏幕（大桌面显示器，大于等于 1200px） */
@media (min-width: $screen-lg-max) {
  /* 没有任何代码 ， 因为这是默认情况 */
}
.col-xl-0{
  width: 0;
  display: none;
}
.col-xl-1{
  width: $colWidth;
}
.col-xl-2{
  width: $colWidth*2;
}
.col-xl-3{
  width: $colWidth*3;
}
.col-xl-4{
  width: $colWidth*4;
}
.col-xl-5{
  width: $colWidth*5;
}
.col-xl-6{
  width: $colWidth*6;
}
.col-xl-7{
  width: $colWidth*7;
}
.col-xl-8{
  width: $colWidth*8;
}
.col-xl-9{
  width: $colWidth*9;
}
.col-xl-10{
  width: $colWidth*10;
}
.col-xl-11{
  width: $colWidth*11;
}
.col-xl-12{
  width: $colWidth*12;
}
/* lg: 大屏幕（大桌面显示器，小于等于 1200px） */
@media (max-width: 1200px) /*and (min-width:992px)*/ {
  .col-lg-0{
    width: 0;
    display: none;
  }
  .col-lg-1{
    width: $colWidth;
  }
  .col-lg-2{
    width: $colWidth*2;
  }
  .col-lg-3{
    width: $colWidth*3;
  }
  .col-lg-4{
    width: $colWidth*4;
  }
  .col-lg-5{
    width: $colWidth*5;
  }
  .col-lg-6{
    width: $colWidth*6;
  }
  .col-lg-7{
    width: $colWidth*7;
  }
  .col-lg-8{
    width: $colWidth*8;
  }
  .col-lg-9{
    width: $colWidth*9;
  }
  .col-lg-10{
    width: $colWidth*10;
  }
  .col-lg-11{
    width: $colWidth*11;
  }
  .col-lg-12{
    width: $colWidth*12;
  }
}
/* md: 中等屏幕（桌面显示器，小于等于 992） */
@media (max-width: 991px)/* and (min-width:768px)*/{
  .col-md-0{
    width: 0;
    display: none;
  }
  .col-md-1{
    width: $colWidth;
  }
  .col-md-2{
    width: $colWidth*2;
  }
  .col-md-3{
    width: $colWidth*3;
  }
  .col-md-4{
    width: $colWidth*4;
  }
  .col-md-5{
    width: $colWidth*5;
  }
  .col-md-6{
    width: $colWidth*6;
  }
  .col-md-7{
    width: $colWidth*7;
  }
  .col-md-8{
    width: $colWidth*8;
  }
  .col-md-9{
    width: $colWidth*9;
  }
  .col-md-10{
    width: $colWidth*10;
  }
  .col-md-11{
    width: $colWidth*11;
  }
  .col-md-12{
    width: $colWidth*12;
  }
}
/* sm: 小屏幕（平板，小于等于 768px） */
@media (max-width:767px) /*and (min-width:576px)*/{
  .col-sm-0{
    width: 0;
    display: none;
  }
  .col-sm-1{
    width: $colWidth;
  }
  .col-sm-2{
    width: $colWidth*2;
  }
  .col-sm-3{
    width: $colWidth*3;
  }
  .col-sm-4{
    width: $colWidth*4;
  }
  .col-sm-5{
    width: $colWidth*5;
  }
  .col-sm-6{
    width: $colWidth*6;
  }
  .col-sm-7{
    width: $colWidth*7;
  }
  .col-sm-8{
    width: $colWidth*8;
  }
  .col-sm-9{
    width: $colWidth*9;
  }
  .col-sm-10{
    width: $colWidth*10;
  }
  .col-sm-11{
    width: $colWidth*11;
  }
  .col-sm-12{
    width: $colWidth*12;
  }
}
/* xs: 超小屏幕（手机，小于 576px） */
@media (max-width:575px) {
  .col-xs-0{
    width: 0;
    display: none;
  }
  .col-xs-1{
    width: $colWidth;
  }
  .col-xs-2{
     width: $colWidth*2;
  }
  .col-xs-3{
    width: $colWidth*3;
  }
  .col-xs-4{
    width: $colWidth*4;
  }
  .col-xs-5{
    width: $colWidth*5;
  }
  .col-xs-6{
    width: $colWidth*6;
  }
  .col-xs-7{
    width: $colWidth*7;
  }
  .col-xs-8{
    width: $colWidth*8;
  }
  .col-xs-9{
    width: $colWidth*9;
  }
  .col-xs-10{
    width: $colWidth*10;
  }
  .col-xs-11{
    width: $colWidth*11;
  }
  .col-xs-12{
    width: $colWidth*12;
  }
}




/*========================================*/
/* 字体图标库 */
/*========================================*/
@import "css/ionicons.css";





/* ========================================
  公用变量
 ========================================== */
// Options
//
// Quickly modify global styling by enabling or disabling optional features.
$enable-grid-classes:       true !default;

// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.
$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px
) !default;

// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns:                12 !default;
$grid-gutter-width:           30px !default;


// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;

/* ========================================
  公用函数
 ========================================== */
// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

/* ========================================
  响应式
 ========================================== */
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}
